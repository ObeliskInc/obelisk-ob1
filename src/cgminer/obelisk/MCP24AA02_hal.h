/**
 * \file MCP24AA02_hal.h
 *
 * \brief 2Kbit EEPROM firmware related declaration.

 * \section Legal
 * **Copyright Notice:**
 * Copyright (c) 2018 All rights reserved.
 *
 * **Proprietary Notice:**
 *       This document contains proprietary information and neither the document
 *       nor said proprietary information shall be published, reproduced, copied,
 *       disclosed or used for any purpose other than the consideration of this
 *       document without the expressed written permission of a duly authorized
 *       representative of said Company.
 *
 * \section Description
 * Expose functions and public data needed for the driver.
 */

#ifndef _MCP24AA02_HAL_H_INCLUDED
#define _MCP24AA02_HAL_H_INCLUDED

// #include "MCP24AA02_Defines.h"


/***  ASSOCIATED STRUCTURES/ENUMS      ***/
/**
 * \brief MCP24AA02 read only offsets
 * These are where to read from for various information.
 * A 6-byte (48-bit) UID can be generated by including the mfg ID
 * and device ID with the unique ID
 */
typedef enum {
    E_MFG_ID_OFFSET = 0xFA,     // addr ptr offset
    E_MFG_ID_VALUE  = 0x29,     // expected mfg id code
    E_DEV_ID_OFFSET = 0xFB,
    E_DEV_ID_VALUE  = 0x41,     // expected device code for 24AA02UID
    E_UID_OFFSET    = 0xFC      // 4-byte (32-bit) code start
} E_MCP24AA02_CODES_T;


/***   GLOBAL DATA DECLARATIONS     ***/
// Task pending globals; for ISR callbacks, etc

/***   GLOBAL FUNCTION PROTOTYPES   ***/
extern int iGetUID(uint8_t uiBoard, uint64_t *puiUIDValue);

#endif /* ifndef _MCP24AA02_HAL_H_INCLUDED */
